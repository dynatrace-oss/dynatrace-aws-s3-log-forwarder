os: linux
dist: jammy
if: fork = false

language: python
python:
  - '3.9'

stages:
- tests
jobs:
  include:
  - stage: tests
    name: Tests
    services:
    - docker
    before_install:
    # Install AWS CLI v2
    - if ! [ -x "$(command -v aws)" ]; then wget -nv "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"; unzip -qq awscli-exe-linux-x86_64.zip; sudo ./aws/install ; fi
    - bash get-required-lambda-layers.sh
    - docker build -t queueprocessingfunction --build-arg ARCH="x86_64" --build-arg
      ENABLE_LAMBDA_INSIGHTS="false" --build-arg ENV="DEV" .
    env:
    - PYTHONPATH="/var/task/src:/var/runtime"
    - AWS_SAM_LOCAL="True"
    - DEPLOYMENT_NAME="test"
    - POWERTOOLS_METRICS_NAMESPACE="local"
    - DYNATRACE_1_ENV_URL="https://abc1234.live.dynatrace.com"
    - DYNATRACE_1_API_KEY_PARAM="/dynatrace/s3-log-forwarder/dynatrace-s3-log-forwarder/tenant/api-key"
    - AWS_DEFAULT_REGION="us-east-1"
    - LOG_FORWARDER_CONFIGURATION_LOCATION="local"
    script:
    - docker run --entrypoint="" --mount type=bind,source="$TRAVIS_BUILD_DIR"/tests,target=/var/task/tests
      queueprocessingfunction python -m unittest discover -s tests
env:
  global:
  - secure: rQuBF5LJD/GVwaypyvO8YsGry6dLH9K66uKx4GnYsXcAe7AazPkAR70ICyDHSVZ4Ow0/06FF/6iMaKZBFcZxyhy1ikQkiy1O181LdVInWxERsnbd6Xk7/jCsXv+mYx4yR7wX6bpcGBj9rWM6eW0rIgUVy3p3gj8H/yQViZys/iigcdSfKoU1GxlplDRxILWY9G2GXoupwJPefa7OVP1XZr6jo1O12uX8DDtAe13DFep+alCdzAOTM4B4d795tzbZYM93Iba1jp20VBnVIGI0pFg/BzrX0G6/hDYwNdIx2OEJ6MZhkQX7fMp+o/9jDEQ0Iqp7v4EZLqtB/LMCsxf3hX84E7ze8iPRnkytdK/oz9lbTC0RuETQXkOinTDuoWTdyYY0HhqYIRbVOVEqr4OS1fYzFQf8ZgM0+sq+vgE4GuWuEGamzhCXTHac7+o0ylW9GNEWJfYa4QbB0LE2FFVVWCmgp0p7sxZZHTxYSuDot4KrTjjZRNXEXWaDW4HV1PpTTiI3iYA5EKB8maVbCWv3X6ozoSV+pyJBzPadry4rM/08I2XTEtNldIuct6L/HmPS4wQhadh5n6JUhgwo6E4ATkXjnedCdjCg31LVj8y7jOyC/cratmxz6J65VHOxonlPTzipcjJtrgeS8uB97lOLb37L7hhybkz9C4AfzqIPFgg=
  - secure: PN78JTV5yEd1UlOs1MLwmqZKuAy0UP/H7utFLpf3TXA+Uy2Byfw1FpEBAhqD3MiQ7tJM0G6xPJCRAjKVyV5K1qaLCKRu+abtpvqpf4P67i2ccl0WcNOYXlmwAuKXNb+uSUCKsoVu3j9c+FuP1Rw6JhPFtA15vG8KKcbio7Ed8c4+7OtzpIcLcORWSXHWMvS2vh3/p/9Tj6jT7wF0uGwVQKn0gOg3folu6O2aOiOrJkBIjJiTLF9Ok8kUFc7c2CzRYdBxZsG5f1tJDanwoWDfUzpDNNkAll8VlCdTwhM3MszKRwDbemsoldNdMFEanl2/4LwNMJaKl5h0tRJ4fqAx59qCvDQ9WfbGON/C4cmTmk7jlEhT05gr5V11CHU0nYAoMIu925vM08Oiqt7vI6HqcyaifmLOTqgUBu+7X29bshJtcTznDynBVmgUKezQLBlyT3yOwODHLNZYB5ybM/V4wyMqT0LL2MvEKm7N0ny8rdP50uBZf9C0ynAdmDNuIJVlj92q6BwgWBsl6xPcnBOb/W0V6PF9rucFMveDHOlzqq/we6fUZFtJDtBmPmvxX+swprdqToPp6HUbx+f8SWyFez9nlgOeo2/EPeChtjd1kV7XgvPdhqDyJvP0NDyak+noiXqSt+nqrdjOrBIbDt+73tidfZw4BX74xehmPp1JAao=
  - secure: oUMamNk0dvAj+wueUL4RwIRtEWhboFu0oVvkDkgQJDMpykOl23ZFPxyd+PPSjtKzrzpfIWgE5r5z4q7hS+r9S+xoAl3lVpq7ASUgZZKoMGuXdJ9Tcl6aycKYkCIYpFKWaD4oweh5TL2Ted9BMNniya8SqD94VLpUKVZDQUI29igKr/mGqErF9aDKfKH7J8+eZkPUdzjBc/bxOewK8N5pwRVcObTGIFDU0n4E3aq44lz+gXYTYw/gPt2XCjxWMHIMLfF+JKe62mO3Z5k25+a7wgaQ7Mpfm7dc0YMn8alGeHBUvxzo5XW6Q/+x9v2T20WQXM8KlZy/aQqVvaTGLOcNUWF9oYzU0TBlIL07/FVtS2Sd/Z/FkHiw8YtSeGasmAnx25Nk51X72WbOdiiY8tjhQnV7p+ok3PviuQe/vCDCIHLy2F1/QimovJ02+aePkXs0GIfVqlog4oOXiSCBC11Z5+jDbX4SrKJhGlOJRyY3A8cKi2tkropzWY3063TOhstkChHKV2QGVEFAbRhKU+MxV6vP1kbRcdbRCWoARyIZDMzHBesuHjiLHb+inZHfRRWKenUecj+U+UmM/QZeHmH4pwKEKo0m9iN6cS26f5wWxM/y3C9tX1OxTl6LgKeHLtxAg9EFVLs6tP7rW/Na1DSLHimEbiUHA8AIH7ZkD01R1YA=
